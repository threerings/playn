<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright 2010 The PlayN Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit trunk//EN" "http://google-web-toolkit.googlecode.com/svn/trunk/distro-source/core/src/gwt-module.dtd">
<module>
  <inherits name='com.google.gwt.user.User'/>
  <source path='core'>
    <!-- Exclude non-GWT-compatible classes -->
    <exclude name='**/*Test.java' />
  </source>
  <source path='html'/>
  <super-source path="super" />

  <!--
    Speed up compile time. Target only modern HTML5 browsers.
    The value 'safari' exists solely for for historical reasons.
    Your PlayN game should work in Chrome, Firefox 3.6/4.0, Safari, IE9.
  -->
  <set-property name='user.agent' value='safari'/>
  <set-configuration-property name="user.agent.runtimeWarning" value="false" />

  <!-- Geometry library -->
  <inherits name='pythagoras.Pythagoras'/>

  <!-- Flash/HTML5/Native audio support -->
  <inherits name="com.allen_sauer.gwt.voices.gwt-voices" />
  <!--
    This allows us to replace the normal compile time deferred binding implementation
    decision, with a runtime decision, based on the runtime user agent. Doing so, allows us to use
    'safari' as a single 'user.agent' permutation, which speeds up compile time,
    but still provides Flash detection in IE.
  -->
  <replace-with class="com.allen_sauer.gwt.voices.client.ui.impl.FlashMovieImplPlayN">
    <when-type-is class="com.allen_sauer.gwt.voices.client.ui.impl.FlashMovieImpl" />
  </replace-with>

  <!-- By default, we log to System.out in Development Mode -->
  <replace-with class="playn.html.HtmlLogSimple">
    <when-type-assignable class="playn.html.HtmlLog" />
  </replace-with>

  <!--
    Optionally, enable gwt-log's advanced logging features, add
    this to your game's .gwt.xml module:

      <inherits name="playn.logging.Enhanced" />
  -->

  <!-- Auto ClientBundle -->
  <generate-with class="playn.rebind.AutoClientBundleGenerator">
    <when-type-assignable class="playn.core.AutoClientBundleWithLookup" />
  </generate-with>

  <inherits name="com.google.gwt.webgl.WebGL" />

  <define-linker name="appcachelinker" class="playn.appcachelinker.AppCacheLinker" />
  <!--
    By default, we don't use the appcachelinker. If you would like to use it in your project,
    add the following line to your game's .gwt.xml module:

      <add-linker name="appcachelinker" />
  -->
</module>
