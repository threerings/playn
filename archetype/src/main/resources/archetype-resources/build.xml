#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0"?>
<project name="${rootArtifactId}" default="run-java" xmlns:artifact="urn:maven-artifact-ant">
  <!-- Define your project information here -->
  <property name="java.classname" value="${package}.java.${JavaGameClassName}Java"/>
  <property name="html.classname" value="${package}.${JavaGameClassName}"/>
  <property name="html.index" value="${JavaGameClassName}.html"/>

  <!-- Everything below here shouldn't need to be modified -->
  <!-- run 'ant -p' to see available targets -->
  <property name="src.dir"     value="src/main/java"/>
  <property name="war.dir"     value="src/main/webapp"/>
  <property name="target.dir"  value="target"/>
  <property name="resource.dir" value="src/main/resources"/>
  <property name="classes.dir" value="${symbol_dollar}{target.dir}/classes"/>
  <property name="webapp.dir"  value="${symbol_dollar}{target.dir}/webapp"/>

  <!-- Maven Ant task wiring -->
  <property name="maven-ant.vers" value="2.1.3"/>
  <property name="maven-ant.dir" value="${symbol_dollar}{user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${symbol_dollar}{maven-ant.dir}/maven-ant-tasks-${symbol_dollar}{maven-ant.vers}.jar"/>
  <property name="maven-ant.url" value="http://apache.webxcreen.org/maven/ant-tasks/${maven-ant.vers}/binaries"/>
  <condition property="maven-ant.exists"><available file="${symbol_dollar}{maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${symbol_dollar}{maven-ant.dir}"/>
    <get src="${symbol_dollar}{maven-ant.url}/maven-ant-tasks-${symbol_dollar}{maven-ant.vers}.jar"
         dest="${symbol_dollar}{maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${symbol_dollar}{maven-ant.jar}"/>
  </target>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${symbol_dollar}{target.dir}"/>
    <artifact:pom id="pom" file="core/pom.xml"/>
    <artifact:dependencies pathId="core.classpath" pomRefId="pom" useScope="compile"/>
  </target>

  <!-- unfortunately the Maven Ant Tasks don't handle multi-submodule projects well -->
  <!-- so we have to do a bunch of manual dependency management in here -->

  <target name="-prepare-java" depends="-prepare">
    <artifact:dependencies pathId="java-extras.classpath">
      <dependency groupId="com.googlecode.playn" artifactId="playn-java"
                  version="${symbol_dollar}{pom.properties.playn.version}"/>
    </artifact:dependencies>
    <path id="java.classpath">
      <path refid="core.classpath"/>
      <path refid="java-extras.classpath"/>
    </path>
  </target>

  <target name="-prepare-html" depends="-prepare">
    <artifact:dependencies pathId="html-extras.classpath">
      <dependency groupId="com.googlecode.playn" artifactId="playn-html"
                  version="${symbol_dollar}{pom.properties.playn.version}"/>
      <dependency groupId="com.google.gwt" artifactId="gwt-dev"
                  version="${symbol_dollar}{pom.properties.gwt.version}"/>
    </artifact:dependencies>
    <path id="html.classpath">
      <path refid="core.classpath"/>
      <path refid="html-extras.classpath"/>
    </path>
  </target>

  <target name="-prepare-android" depends="-prepare">
    <artifact:dependencies pathId="android-extras.classpath">
      <dependency groupId="com.googlecode.playn" artifactId="playn-android"
                  version="${symbol_dollar}{pom.properties.playn.version}"/>
      <dependency groupId="com.google.android" artifactId="android"
                  version="${symbol_dollar}{pom.properties.android.version}"/>
    </artifact:dependencies>
    <path id="android.classpath">
      <path refid="core.classpath"/>
      <path refid="android-extras.classpath"/>
    </path>
  </target>

  <target name="-prep-webapp" depends="-prepare-html">
    <mkdir dir="${symbol_dollar}{webapp.dir}"/>
    <copy todir="${symbol_dollar}{webapp.dir}">
      <fileset dir="html/${symbol_dollar}{war.dir}" includes="**"/>
    </copy>
    <!-- we need to resolve this for the GWT classpath to avoid a bunch of warnings -->
    <artifact:dependencies sourcesFileSetId="validation.sources.fileset">
      <dependency groupId="javax.validation" artifactId="validation-api" version="1.0.0.GA"/>
    </artifact:dependencies>
    <pathconvert property="validation.source.jar" refid="validation.sources.fileset"/>
  </target>

  <target name="clean" description="Cleans out all build results.">
    <delete dir="${symbol_dollar}{target.dir}"/>
  </target>

  <target name="compile" depends="-prepare-java" description="Compiles the core code.">
    <mkdir dir="${symbol_dollar}{classes.dir}"/>
    <javac destdir="${symbol_dollar}{classes.dir}" includeAntRuntime="false"
           debug="on" deprecation="on" source="1.6" target="1.6">
      <src path="core/${symbol_dollar}{src.dir}"/>
      <src path="java/${symbol_dollar}{src.dir}"/>
      <classpath refid="java.classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
    <!-- copy all of our resources into the classes directory -->
    <copy todir="${symbol_dollar}{classes.dir}">
      <fileset dir="assets/${symbol_dollar}${resource.dir}"/>
    </copy>
  </target>

  <target name="-compile-html" depends="-prepare-html,compile">
    <javac srcdir="html/${symbol_dollar}{src.dir}" destdir="${symbol_dollar}{classes.dir}" includeAntRuntime="false"
           debug="on" deprecation="on" source="1.6" target="1.6">
      <classpath refid="html.classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <property name="gwt.style" value="obf"/>
  <target name="compile-html" depends="-prep-webapp,-compile-html"
          description="Compiles game to JavaScript.">
    <java fork="true" maxmemory="1024M" failonerror="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="${symbol_dollar}{javax.validation:validation-api:jar}"/>
        <pathelement location="${symbol_dollar}{validation.source.jar}"/>
        <pathelement path="core/${symbol_dollar}{src.dir}"/>
        <pathelement path="html/${symbol_dollar}{src.dir}"/>
        <pathelement location="${symbol_dollar}{classes.dir}"/>
        <path refid="html.classpath"/>
      </classpath>
      <jvmarg value="-Djava.awt.headless=true"/>
      <arg value="-style"/><arg value="${symbol_dollar}{gwt.style}"/>
      <arg value="-war"/>
      <arg value="${symbol_dollar}{target.dir}/webapp"/>
      <arg value="${symbol_dollar}{html.classname}"/>
    </java>
  </target>

  <target name="run-html" depends="compile-html" description="Serves HTML game on localhost.">
    <artifact:dependencies pathId="jetty-ant.classpath">
      <remoteRepository id="jetty-repo" url="http://oss.sonatype.org/content/groups/jetty/"/>
      <Dependency groupId="org.mortbay.jetty" artifactId="jetty-ant"
                  version="7.4.2.v20110526" scope="runtime" />
    </artifact:dependencies>
    <taskdef classpathref="jetty-ant.classpath" resource="tasks.properties"/>
    <echo>=================================================================</echo>
    <echo>Browse to http://localhost:8080/${symbol_dollar}{ant.project.name}/${symbol_dollar}{html.index}</echo>
    <echo>=================================================================</echo>
    <jetty tempDirectory="${symbol_dollar}{target.dir}/jetty-temp">
      <webApp name="html-server" warfile="${symbol_dollar}{target.dir}/webapp" contextpath="/${symbol_dollar}{ant.project.name}"/>
    </jetty>
  </target>

  <target name="run-devmode" depends="-prep-webapp,-compile-html"
          description="Runs game in GWT development mode.">
    <java fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="${symbol_dollar}{javax.validation:validation-api:jar}"/>
        <pathelement location="${symbol_dollar}{validation.source.jar}"/>
        <pathelement path="core/${symbol_dollar}{src.dir}"/>
        <pathelement path="html/${symbol_dollar}{src.dir}"/>
        <pathelement location="${symbol_dollar}{classes.dir}"/>
        <path refid="html.classpath"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="index.html"/>
      <arg value="-war"/>
      <arg value="${symbol_dollar}{target.dir}/webapp"/>
      <arg value="-startupUrl"/>
      <arg value="${symbol_dollar}{html.index}"/>
      <arg value="${symbol_dollar}{html.classname}"/>
    </java>
  </target>

  <target name="run-java" depends="compile" description="Runs game in JVM.">
    <java fork="true" dir="java" classname="${symbol_dollar}{java.classname}">
      <classpath>
        <pathelement location="${symbol_dollar}{classes.dir}"/>
        <path refid="java.classpath"/>
      </classpath>
      <sysproperty key="java.library.path" value="target/natives"/>
    </java>
  </target>
</project>
